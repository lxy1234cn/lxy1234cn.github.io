<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>粘包半包的解决方法</title>
      <link href="/2024/11/05/%E7%B2%98%E5%8C%85%E5%8D%8A%E5%8C%85%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2024/11/05/%E7%B2%98%E5%8C%85%E5%8D%8A%E5%8C%85%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h3 id="什么是粘包？"><a href="#什么是粘包？" class="headerlink" title="什么是粘包？"></a>什么是粘包？</h3><pre><code> 是指如果当发送端快速发送多条数据，但是接收端没有及时调用Receive，那么数据会在接收端的缓存中积累。</code></pre><p>例如：当发送端先发送“1，2，3，4”四个字节，紧接着又发送“5，6，7，8”四个字节的数据；等到接收端调用Receive的<br>时候，接收端的操作系统已经将接收到的全部数据写入缓存区，共接收到“8”个字节。</p><h3 id="什么是半包？"><a href="#什么是半包？" class="headerlink" title="什么是半包？"></a>什么是半包？</h3><pre><code> 也就是当发送端发送的数据太长了，但是接收端的缓存区没有足够的空间接收全部数据，就会接收一部分数据，另一</code></pre><p>部分等下一次调用Receive的时候在接收。<br>例如：发送端发送：asdfghjkl，但是接收端只剩下三个字节的空间，此时接收端接收“asd”，等到下一次调用Receive时再<br>接收fghjkl。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><h4 id="一-长度信息法："><a href="#一-长度信息法：" class="headerlink" title="一.长度信息法："></a>一.长度信息法：</h4><pre><code> 在每一个数据包前面加上长度信息，每次接收到数据包后先读取表示长度的字节，如果缓存区的数据长度大于要取的字</code></pre><p>节数，则取出相应的字节，否则等待下一次数据接收。</p><h4 id="二-固定长度法："><a href="#二-固定长度法：" class="headerlink" title="二.固定长度法："></a>二.固定长度法：</h4><pre><code> 每次都以固定的长度发送数据，若大小 “小于” 固定长度，则可以填入一些事先约定的符合占位凑数。</code></pre><h4 id="三-结束符号法："><a href="#三-结束符号法：" class="headerlink" title="三.结束符号法："></a>三.结束符号法：</h4><pre><code> 规定一个结束符号，作为消息间的分隔符；将每次接收到的消息字节，通过结束符分开。</code></pre><p>例如：规定一个结束符为“$” ；若接收到一条消息字节为“Helloworld$Iam”,则接收端先处理数据“Helloworld”，保留“Iam”<br>等到下一个“$”出现，将“Iam”和下一个“$”之间的数据粘在一起，作为一条完整的消息。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在C#中操作SQLserver数据库</title>
      <link href="/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E6%93%8D%E4%BD%9CSQLserver%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E6%93%8D%E4%BD%9CSQLserver%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="创建C-“控制台应用（-net-framework）”"><a href="#创建C-“控制台应用（-net-framework）”" class="headerlink" title="创建C#“控制台应用（.net framework）”"></a>创建C#“控制台应用（.net framework）”</h2><h3 id="注意项目名为CsToSqlTest02，或者自行去改变命名空间。"><a href="#注意项目名为CsToSqlTest02，或者自行去改变命名空间。" class="headerlink" title="注意项目名为CsToSqlTest02，或者自行去改变命名空间。"></a>注意项目名为CsToSqlTest02，或者自行去改变命名空间。</h3><pre><code>  这段代码是一个C#控制台应用程序，它允许用户通过命令行界面与一个SQL Server数据库进行交互。程序提供了两个主要功能：向数据库插入数据（INSERT）和从数据库查询数据（SELECT）。</code></pre><h4 id="完整代码如下："><a href="#完整代码如下：" class="headerlink" title="完整代码如下："></a>完整代码如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.Data;</span><br><span class="line">namespace CsToSqlTest02</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">            private static string ServeToDateBase = &quot;Server = localhost;DataBase = TestData02x01;Trusted_Connection = true;&quot;;//连接字符串，用于连接数据库</span><br><span class="line">            static string sqlSTR; //= $&quot;insert into UserDataTable_1(userid,userkeyword,username) values(&#x27;&#123;userid&#125;&#x27;,&#x27;&#123;userkeyword&#125;&#x27;,&#x27;&#123;username&#125;&#x27;)&quot;;</span><br><span class="line">            static string userid ;</span><br><span class="line">            static string userkeyword ;</span><br><span class="line">            static string username ;</span><br><span class="line">       </span><br><span class="line">         static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            string a;</span><br><span class="line">            Console.WriteLine(&quot;输入INSERT在数据库插入数据，输入SELECT查看数据库数据&quot;);</span><br><span class="line">            a = Console.ReadLine();</span><br><span class="line">            if (a == &quot;INSERT&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                CR();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (a == &quot;SELECT&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                CK();        </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (a != &quot;INSERT&quot; &amp;&amp; a != &quot;SELECT&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;指令错误&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(&quot;按任意键关闭&quot;);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void CR() </span><br><span class="line">        &#123;</span><br><span class="line">            string a;</span><br><span class="line">            Console.WriteLine(&quot;请输入ID，keyword，name&quot;);</span><br><span class="line">            userid = Console.ReadLine();</span><br><span class="line">            userkeyword = Console.ReadLine();</span><br><span class="line">            username = Console.ReadLine();</span><br><span class="line">            sqlSTR = $&quot;insert into UserDataTable_1(userid,userkeyword,username) values(&#x27;&#123;userid&#125;&#x27;,&#x27;&#123;userkeyword&#125;&#x27;,&#x27;&#123;username&#125;&#x27;)&quot;;</span><br><span class="line">            InsertSQLDateBase(sqlSTR);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(&quot;按SELECT进行查看，按INSERT继续进行插入,按C退出操作&quot;);</span><br><span class="line">            a = Console.ReadLine();</span><br><span class="line">            if (a == &quot;SELECT&quot;) &#123; CK(); &#125;</span><br><span class="line">            if (a == &quot;INSERT&quot;) &#123; CR(); &#125;</span><br><span class="line">            if(a == &quot;C&quot;) &#123; return; &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void CK() </span><br><span class="line">        &#123;</span><br><span class="line">            string a;</span><br><span class="line"></span><br><span class="line">            sqlSTR = &quot;select * from UserDataTable_1&quot;;</span><br><span class="line">            SelectSQLDateBase(sqlSTR);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(&quot;按SELECT进行查看，按INSERT继续进行插入,按C退出操作&quot;);</span><br><span class="line">            a = Console.ReadLine();</span><br><span class="line">            if (a == &quot;SELECT&quot;) &#123; CK(); &#125;</span><br><span class="line">            if (a == &quot;INSERT&quot;) &#123; CR(); &#125;</span><br><span class="line">            if (a == &quot;C&quot;) &#123; return; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        public static void InsertSQLDateBase(string sqlSTR)</span><br><span class="line">        &#123;</span><br><span class="line">            SqlConnection conn = new SqlConnection();</span><br><span class="line">            conn.ConnectionString = ServeToDateBase;</span><br><span class="line">            conn.Open();</span><br><span class="line"></span><br><span class="line">            SqlCommand cmd = new SqlCommand(sqlSTR, conn);</span><br><span class="line">            int result = cmd.ExecuteNonQuery();</span><br><span class="line">            if (result &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($&quot;执行新增语句,受影响的行数&#123;result&#125;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            conn.Close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void SelectSQLDateBase(string sqlSTR) </span><br><span class="line">        &#123;</span><br><span class="line">        SqlConnection con = new SqlConnection();</span><br><span class="line">            con.ConnectionString = ServeToDateBase;</span><br><span class="line">            con.Open();</span><br><span class="line"></span><br><span class="line">        SqlCommand cmd = new SqlCommand(sqlSTR, con);</span><br><span class="line">            SqlDataAdapter adapter = new SqlDataAdapter();</span><br><span class="line">            adapter.SelectCommand = cmd;</span><br><span class="line"></span><br><span class="line">        DataSet ds = new DataSet();</span><br><span class="line">           adapter.Fill(ds);</span><br><span class="line">            con.Close();</span><br><span class="line">            DataTable dt = ds.Tables[0];</span><br><span class="line">            for (int i = 0; i &lt; dt.Rows.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($&quot;&#123;dt.Rows[i][&quot;userid&quot;]&#125;  &#123;dt.Rows[i][&quot;userkeyword&quot;]&#125;  &#123;dt.Rows[i][&quot;username&quot;]&#125;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="一：连接字符串和变量声明"><a href="#一：连接字符串和变量声明" class="headerlink" title="一：连接字符串和变量声明"></a>一：连接字符串和变量声明</h3><pre><code> 这里定义了数据库连接字符串ServeToDateBase，它包含了服务器地址、数据库名和连接方式（这里使用的是Windows身份验证）。 同时声明了三个静态字符串变量用于存储用户输入的ID、关键词和名称，以及一个用于构建SQL语句的字符串变量sqlSTR。</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">private static string ServeToDateBase = &quot;Server = localhost;DataBase = TestData02x01;Trusted_Connection = true;&quot;;//连接字符串，用于连接数据库</span><br><span class="line">static string sqlSTR; //= $&quot;insert into UserDataTable_1(userid,userkeyword,username) values(&#x27;&#123;userid&#125;&#x27;,&#x27;&#123;userkeyword&#125;&#x27;,&#x27;&#123;username&#125;&#x27;)&quot;;</span><br><span class="line">static string userid ;</span><br><span class="line">static string userkeyword ;</span><br><span class="line">static string username ;</span><br></pre></td></tr></table></figure><h3 id="二：插入数据库方法（InsertSQLDateBase）"><a href="#二：插入数据库方法（InsertSQLDateBase）" class="headerlink" title="二：插入数据库方法（InsertSQLDateBase）"></a>二：插入数据库方法（InsertSQLDateBase）</h3><pre><code> InsertSQLDateBase方法使用提供的SQL语句打开数据库连接，执行插入操作，并根据受影响的行数给出反馈。</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public static void InsertSQLDateBase(string sqlSTR)</span><br><span class="line">  &#123;</span><br><span class="line">      SqlConnection conn = new SqlConnection();</span><br><span class="line">      conn.ConnectionString = ServeToDateBase;</span><br><span class="line">      conn.Open();</span><br><span class="line"></span><br><span class="line">      SqlCommand cmd = new SqlCommand(sqlSTR, conn);</span><br><span class="line">      int result = cmd.ExecuteNonQuery();</span><br><span class="line">      if (result &gt; 0)</span><br><span class="line">          &#123;</span><br><span class="line">              Console.WriteLine($&quot;执行新增语句,受影响的行数&#123;result&#125;&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">      conn.Close();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="三：查询数据库方法（SelectSQLDateBase）"><a href="#三：查询数据库方法（SelectSQLDateBase）" class="headerlink" title="三：查询数据库方法（SelectSQLDateBase）"></a>三：查询数据库方法（SelectSQLDateBase）</h3><pre><code>  SelectSQLDateBase方法使用提供的SQL语句打开数据库连接，执行查询操作，并将结果填充到DataSet中。  然后关闭连接，并遍历结果集，将每行数据输出到控制台。</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public static void SelectSQLDateBase(string sqlSTR) </span><br><span class="line">&#123;</span><br><span class="line">SqlConnection con = new SqlConnection();</span><br><span class="line">    con.ConnectionString = ServeToDateBase;</span><br><span class="line">    con.Open();</span><br><span class="line"></span><br><span class="line">SqlCommand cmd = new SqlCommand(sqlSTR, con);</span><br><span class="line">    SqlDataAdapter adapter = new SqlDataAdapter();</span><br><span class="line">    adapter.SelectCommand = cmd;</span><br><span class="line"></span><br><span class="line">DataSet ds = new DataSet();</span><br><span class="line">   adapter.Fill(ds);</span><br><span class="line">    con.Close();</span><br><span class="line">    DataTable dt = ds.Tables[0];</span><br><span class="line">    for (int i = 0; i &lt; dt.Rows.Count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine($&quot;&#123;dt.Rows[i][&quot;userid&quot;]&#125;  &#123;dt.Rows[i][&quot;userkeyword&quot;]&#125;  &#123;dt.Rows[i][&quot;username&quot;]&#125;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在使用SQLserver数据库时可能遇见的问题"><a href="#在使用SQLserver数据库时可能遇见的问题" class="headerlink" title="在使用SQLserver数据库时可能遇见的问题"></a>在使用SQLserver数据库时可能遇见的问题</h2><h3 id="显示无法连接到服务器"><a href="#显示无法连接到服务器" class="headerlink" title="显示无法连接到服务器"></a>显示无法连接到服务器</h3><p> 如下<br> <img src="https://img.picgo.net/2024/11/04/-2024-11-04-2217010e587c3d827bca00.png" alt="屏幕截图 2024 11 04 221701"></p><h3 id="解决方法：找到下面这个界面，也就是SQLsever配置管理器。"><a href="#解决方法：找到下面这个界面，也就是SQLsever配置管理器。" class="headerlink" title="解决方法：找到下面这个界面，也就是SQLsever配置管理器。"></a>解决方法：找到下面这个界面，也就是SQLsever配置管理器。</h3><p> 找到配置管理器中的SQLserver服务</p><p> <img src="https://img.picgo.net/2024/11/04/-2024-11-04-221734fdebf7348b7a997b.png" alt="屏幕截图 2024 11 04 221734"></p><p> 将其全部开启这时再去连接数据库就没问题了。</p><p> 最后附上数据库名称。和数据表名称：</p><p> <img src="https://img.picgo.net/2024/11/04/-2024-11-04-222346b7d000fa61a58ef5.png" alt="屏幕截图 2024 11 04 222346"></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在C#中通过QQ邮箱SMTP服务发送邮件</title>
      <link href="/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E9%80%9A%E8%BF%87QQ%E9%82%AE%E7%AE%B1SMTP%E6%9C%8D%E5%8A%A1%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E9%80%9A%E8%BF%87QQ%E9%82%AE%E7%AE%B1SMTP%E6%9C%8D%E5%8A%A1%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="C-与SMTP服务简单应用"><a href="#C-与SMTP服务简单应用" class="headerlink" title="C#与SMTP服务简单应用"></a>C#与SMTP服务简单应用</h2><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><p> 主要是注意记得去开启SMTP服务，和获取授权码（开启服务后，会自动给用户）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Net;</span><br><span class="line">using System.Net.Mail;</span><br><span class="line">class Program</span><br><span class="line">&#123;</span><br><span class="line">    public static string mailLocalAdd ;//发件人邮箱</span><br><span class="line">    public static string SendToMailAdd ;//收件人邮箱</span><br><span class="line">    public static string keyword ;//SMTP授权码</span><br><span class="line">    public static string mailname;//发件人名称</span><br><span class="line"></span><br><span class="line">    static void Main()</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            MailMessage mailMessage = new MailMessage();</span><br><span class="line">            Console.WriteLine(&quot;发件人邮箱：&quot;);</span><br><span class="line">            mailLocalAdd = Console.ReadLine();</span><br><span class="line">            Console.WriteLine(&quot;发件人名称：&quot;);</span><br><span class="line">            mailname = Console.ReadLine();</span><br><span class="line">            Console.WriteLine(&quot;收件人邮箱：&quot;);</span><br><span class="line">            SendToMailAdd = Console.ReadLine();</span><br><span class="line">            Console.WriteLine(&quot;发件人邮箱的SMTP授权码：&quot;);</span><br><span class="line">            keyword = Console.ReadLine();   </span><br><span class="line">            mailMessage.From = new MailAddress(mailLocalAdd, mailname, System.Text.Encoding.UTF8);//asgte 为发件人的地址及名称。</span><br><span class="line">            mailMessage.To.Add(new MailAddress(SendToMailAdd));//收信人地址</span><br><span class="line">            mailMessage.Bcc.Add(new MailAddress(SendToMailAdd));//添加密送人</span><br><span class="line">            mailMessage.Subject = &quot;C#利用QQ邮箱SMTP服务发送邮件&quot;; //这是主题</span><br><span class="line">            mailMessage.SubjectEncoding = System.Text.Encoding.UTF8;</span><br><span class="line">            mailMessage.IsBodyHtml = false; //是否将邮件主体设置为html格式</span><br><span class="line">            Console.WriteLine(&quot;输入邮件正文：&quot;);</span><br><span class="line">            mailMessage.Body = Console.ReadLine();  //这是邮件正文</span><br><span class="line">            mailMessage.BodyEncoding = System.Text.Encoding.UTF8;</span><br><span class="line">            SmtpClient smtpClient = new SmtpClient(&quot;smtp.qq.com&quot;, 587); //QQ邮箱的SMTP服务器域名与端口</span><br><span class="line">            smtpClient.EnableSsl = true;//是否使用ssl加密</span><br><span class="line">            smtpClient.Credentials = new NetworkCredential(mailLocalAdd, keyword);//设置登录凭证，这里的keyword为你的邮箱的SMTP授权码</span><br><span class="line">            smtpClient.Send(mailMessage);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex) &#123; Console.WriteLine(&quot;EX:&quot; + ex.Message); &#125;</span><br><span class="line">        Console.WriteLine(&quot;按任意键关闭……&quot;);</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SMTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在C#中通过url获取页面HTML文档</title>
      <link href="/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E9%80%9A%E8%BF%87url%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2HTML%E6%96%87%E6%A1%A3/"/>
      <url>/2024/11/04/%E5%9C%A8C-%E4%B8%AD%E9%80%9A%E8%BF%87url%E8%8E%B7%E5%8F%96%E9%A1%B5%E9%9D%A2HTML%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h2 id="这个简单直接上代码"><a href="#这个简单直接上代码" class="headerlink" title="这个简单直接上代码:"></a>这个简单直接上代码:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Net.Http;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">class Program</span><br><span class="line">&#123;</span><br><span class="line">    static async Task Main()</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;输入url地址：&quot;);</span><br><span class="line">        string url = Console.ReadLine(); </span><br><span class="line">        using (HttpClient client = new HttpClient())</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                HttpResponseMessage response = await client.GetAsync(url);</span><br><span class="line">                string content = await response.Content.ReadAsStringAsync();</span><br><span class="line">                Console.WriteLine(content);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (HttpRequestException HRex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;请求失败： &quot; + HRex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex) </span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;请求失败：&quot; + ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Console.ReadLine(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="你猜的没错，这篇就是凑数的"><a href="#你猜的没错，这篇就是凑数的" class="headerlink" title="你猜的没错，这篇就是凑数的"></a>你猜的没错，这篇就是凑数的</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C#的远程注册功能实现</title>
      <link href="/2024/11/04/%E5%9F%BA%E4%BA%8EC-%E7%9A%84%E7%AE%80%E5%8D%95%E8%BF%9C%E7%A8%8B%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
      <url>/2024/11/04/%E5%9F%BA%E4%BA%8EC-%E7%9A%84%E7%AE%80%E5%8D%95%E8%BF%9C%E7%A8%8B%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h1 id="通过Tcp进行远程连接，SQL-server进行数据存储，QQ邮箱发送注册验证码"><a href="#通过Tcp进行远程连接，SQL-server进行数据存储，QQ邮箱发送注册验证码" class="headerlink" title="通过Tcp进行远程连接，SQL server进行数据存储，QQ邮箱发送注册验证码"></a>通过Tcp进行远程连接，SQL server进行数据存储，QQ邮箱发送注册验证码</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>   本文项目可以，在远程主机上通过客户端与服务端的Tcp连接进行通信，然后利用邮箱发送验证码在服务端完成验证并且注册，当验证在服务端通过后，<br>，服务端将会把用户信息保存在SQL server的数据库中。注意使用QQ在服务端发送消息，需要先在QQ邮箱开启SMTP服务，然后保存授权码。</p><h2 id="步骤一：在VisualStudio中创建一个“控制台应用（-net-framework）”的新项目FWDBx02。"><a href="#步骤一：在VisualStudio中创建一个“控制台应用（-net-framework）”的新项目FWDBx02。" class="headerlink" title="步骤一：在VisualStudio中创建一个“控制台应用（.net framework）”的新项目FWDBx02。"></a>步骤一：在VisualStudio中创建一个“控制台应用（.net framework）”的新项目FWDBx02。</h2><p>   项目命名为：FWDBx02 。包含四个部分：Program.cs(主体);MailSendControls.cs(邮件控制);SQLcontrols.cs(数据库控制);<br>ProtocolControls.cs(验证处理控制)。</p><h3 id="Program-cs代码如下："><a href="#Program-cs代码如下：" class="headerlink" title="Program.cs代码如下："></a>Program.cs代码如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Net;</span><br><span class="line">using System.Net.Sockets;</span><br><span class="line"></span><br><span class="line">namespace FWDBx02</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">        private static List&lt;string&gt; DataList = new List&lt;string&gt;();</span><br><span class="line">        private static string asd;</span><br><span class="line">        private static string userReturn;</span><br><span class="line">        public static string asduserID;</span><br><span class="line">        private static string userID;</span><br><span class="line">        public static string asduserkeyword;</span><br><span class="line">        private static string userkeyword;</span><br><span class="line">        private static string CAPTCHAstr;</span><br><span class="line">        public static string asdsendMAIL;</span><br><span class="line">        private static string sendMAIL;</span><br><span class="line">        public static byte[] receiveBuffer = new byte[1024];</span><br><span class="line">        public static string receiveSTR;</span><br><span class="line">        public static IPAddress ipAddress; </span><br><span class="line">        public static int portINT; </span><br><span class="line">        public static IPEndPoint iPEndPoint;</span><br><span class="line">        public static Socket socket;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(&quot;这里是服务端：&quot;);</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;输入服务器IP：&quot;);</span><br><span class="line">                ipAddress = IPAddress.Parse(Console.ReadLine());</span><br><span class="line">                Console.WriteLine(&quot;输入开放端口：&quot;);</span><br><span class="line">                portINT = int.Parse(Console.ReadLine());</span><br><span class="line">                iPEndPoint = new IPEndPoint(ipAddress, portINT);</span><br><span class="line">                socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">                socket.Bind(iPEndPoint);</span><br><span class="line"></span><br><span class="line">                socket.Listen(10);</span><br><span class="line">                socket.BeginAccept(AcceptCallback,socket);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;MAINse:&quot;+se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;MAINex:&quot;+ex.Message); &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void AcceptCallback(IAsyncResult ar)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Socket socket = (Socket)ar.AsyncState;</span><br><span class="line">                Socket clientSocket = socket.EndAccept(ar);</span><br><span class="line">                clientSocket.BeginReceive(receiveBuffer,0,1024,0,ReceiveCallback,clientSocket);</span><br><span class="line">                socket.BeginAccept(AcceptCallback, socket);</span><br><span class="line">            &#125; </span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;ACBse:&quot;+se.Message);&#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;ACBex:&quot;+ex.Message); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void ReceiveCallback(IAsyncResult ar)</span><br><span class="line">        &#123;</span><br><span class="line">            //try </span><br><span class="line">            //&#123;</span><br><span class="line">                Socket clientSocket = (Socket)ar.AsyncState;</span><br><span class="line">                int con = clientSocket.EndReceive(ar);</span><br><span class="line">                receiveSTR = System.Text.Encoding.UTF8.GetString(receiveBuffer, 0, con);</span><br><span class="line">                Console.WriteLine(receiveSTR);//*</span><br><span class="line">                    ProcessingUSER(receiveSTR);</span><br><span class="line">                ///</span><br><span class="line">                clientSocket.BeginReceive(receiveBuffer, 0, 1024, 0, ReceiveCallback, clientSocket);</span><br><span class="line">            //&#125;</span><br><span class="line">            //catch (SocketException se) &#123; Console.WriteLine(&quot;RCBse:&quot;+se.Message);&#125;</span><br><span class="line">            //catch (Exception ex) &#123; Console.WriteLine(&quot;RCBex:&quot;+ex.Message);&#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void ProcessingUSER(string receiveSTR) </span><br><span class="line">        &#123;</span><br><span class="line">            ProtocolControls protocolControls = new ProtocolControls(receiveSTR);</span><br><span class="line">            CAPTCHAstr = protocolControls.captchaSTR;//用户发送信息第一波产生的验证码</span><br><span class="line">            asd = CAPTCHAstr;</span><br><span class="line">            sendMAIL = protocolControls.SENDMAIL;</span><br><span class="line">            asdsendMAIL = sendMAIL;</span><br><span class="line">            userID = protocolControls.USRID; </span><br><span class="line">            asduserID = userID;</span><br><span class="line">            userkeyword = protocolControls.USRKEYWORD;</span><br><span class="line">            asduserkeyword = userkeyword;</span><br><span class="line">            DataList.Add(asduserID);</span><br><span class="line">            DataList.Add(asduserkeyword);</span><br><span class="line">            DataList.Add(asdsendMAIL);</span><br><span class="line">            //DataList.Add(CAPTCHAstr);</span><br><span class="line">            Console.WriteLine($&quot;&#123;asduserID&#125; &#123;asduserkeyword&#125; &#123;asdsendMAIL&#125;&quot;);</span><br><span class="line">            //222222/1234565/3623461767@qq.com</span><br><span class="line">            if (CAPTCHAstr != null) </span><br><span class="line">            &#123;   </span><br><span class="line">                userReturn = protocolControls.USRRETURN;</span><br><span class="line">                </span><br><span class="line">                MailSendControls mailSendControls = new MailSendControls(sendMAIL, CAPTCHAstr);</span><br><span class="line"></span><br><span class="line">            &#125;else if(userReturn == asd )</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($&quot;&#123;DataList[0]&#125; &#123;DataList[1]&#125; &#123;DataList[2]&#125;&quot;);</span><br><span class="line">                SQLcontrols sQLcontrols = new SQLcontrols(DataList[0], DataList[1], DataList[2]);        </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MailSendControls-cs代码如下："><a href="#MailSendControls-cs代码如下：" class="headerlink" title="MailSendControls.cs代码如下："></a>MailSendControls.cs代码如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">using System.Net;</span><br><span class="line">using System.Net.Mail;</span><br><span class="line"></span><br><span class="line">namespace FWDBx02</span><br><span class="line">&#123;</span><br><span class="line">    internal class MailSendControls//注册邮件发送</span><br><span class="line">    &#123;</span><br><span class="line">        private static string mailLocalAdd = &quot;你的邮箱&quot;;</span><br><span class="line">        private static string keyword = &quot;SMTP授权码&quot;;</span><br><span class="line">        private static string SendToMailAdd ;</span><br><span class="line">        private static string CAPTCHAstr;</span><br><span class="line">        public MailSendControls(string sendToMailAdd,string captchaSTR) </span><br><span class="line">        &#123;</span><br><span class="line">         SendToMailAdd = sendToMailAdd;</span><br><span class="line">            CAPTCHAstr = captchaSTR;</span><br><span class="line">            MailSend(SendToMailAdd, CAPTCHAstr);</span><br><span class="line">        &#125;</span><br><span class="line">        private void MailSend(string SendToMailAdd, string captchaSTR)</span><br><span class="line">        &#123;</span><br><span class="line">            MailMessage mailMessage = new MailMessage();</span><br><span class="line">            mailMessage.From = new MailAddress(mailLocalAdd, &quot;通信ID注册&quot;, System.Text.Encoding.UTF8);</span><br><span class="line"></span><br><span class="line">            mailMessage.To.Add(new MailAddress(SendToMailAdd));</span><br><span class="line">            mailMessage.Bcc.Add(new MailAddress(SendToMailAdd));</span><br><span class="line">            mailMessage.Subject = &quot;这是邮件的主题&quot;;</span><br><span class="line">            mailMessage.SubjectEncoding = System.Text.Encoding.UTF8;</span><br><span class="line"></span><br><span class="line">            mailMessage.IsBodyHtml = false;</span><br><span class="line">            mailMessage.Body = $&quot;注册验证码：&#123;captchaSTR&#125;&quot;;</span><br><span class="line">            mailMessage.BodyEncoding = System.Text.Encoding.UTF8;</span><br><span class="line"></span><br><span class="line">            SmtpClient smtpClient = new SmtpClient(&quot;smtp.qq.com&quot;, 587);</span><br><span class="line">            smtpClient.EnableSsl = true;</span><br><span class="line">            smtpClient.Credentials = new NetworkCredential(mailLocalAdd, keyword);</span><br><span class="line">            smtpClient.Send(mailMessage);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SQLcontrols-cs代码如下："><a href="#SQLcontrols-cs代码如下：" class="headerlink" title="SQLcontrols.cs代码如下："></a>SQLcontrols.cs代码如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">using System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line">namespace FWDBx02</span><br><span class="line">&#123;</span><br><span class="line">    internal class SQLcontrols//注册信息存入数据库</span><br><span class="line">    &#123;</span><br><span class="line">        //连接字符串</span><br><span class="line">        private static string serverToDateBase = &quot;Server = localhost;DataBase = TestA02x01;Trusted_Connection = true;&quot;;</span><br><span class="line">        //sql语句</span><br><span class="line">        private static string sqlSTR;  </span><br><span class="line">        private static string userid;</span><br><span class="line">        private static string userkeyword;</span><br><span class="line">        private static string usermail;</span><br><span class="line">        public SQLcontrols(string Userid,string Userkeyword,string Usermail)</span><br><span class="line">        &#123;</span><br><span class="line">            sqlSTR = $&quot;insert into userREGTable_1(userid,userkeyword,usermail) values(&#x27;&#123;Userid&#125;&#x27;,&#x27;&#123;Userkeyword&#125;&#x27;,&#x27;&#123;Usermail&#125;&#x27;)&quot;;</span><br><span class="line">            InsertSQLDB(sqlSTR);</span><br><span class="line">        &#125;</span><br><span class="line">        private static void InsertSQLDB (string SqlSTR)</span><br><span class="line">        &#123;</span><br><span class="line">        SqlConnection sqlConnection = new SqlConnection ();</span><br><span class="line">            sqlConnection.ConnectionString = serverToDateBase;//先连接，再打开</span><br><span class="line">            sqlConnection.Open ();</span><br><span class="line"></span><br><span class="line">        SqlCommand cmd = sqlConnection.CreateCommand ();</span><br><span class="line">            cmd.CommandText = sqlSTR;</span><br><span class="line">            cmd.Connection = sqlConnection;</span><br><span class="line">            int resultSQL = cmd.ExecuteNonQuery ();</span><br><span class="line">            sqlConnection.Close ();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ProtocolControls-cs代码如下："><a href="#ProtocolControls-cs代码如下：" class="headerlink" title="ProtocolControls.cs代码如下："></a>ProtocolControls.cs代码如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace FWDBx02</span><br><span class="line">&#123;</span><br><span class="line">    internal class ProtocolControls //协议处理,将账号的注册并入协议处理</span><br><span class="line">    &#123;</span><br><span class="line">        class ProtocolTexts</span><br><span class="line">        &#123;</span><br><span class="line">            public ProtocolTexts() &#123; &#125;</span><br><span class="line">            public string reg = &quot;REG&quot;;</span><br><span class="line">            public string communication = &quot;COMM&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public string captchaSTR;</span><br><span class="line">        public string SENDMAIL;</span><br><span class="line">        public string USRID;</span><br><span class="line">        public string USRKEYWORD;</span><br><span class="line">        public string USRRETURN;</span><br><span class="line"></span><br><span class="line">        private static string receiveSTR;</span><br><span class="line">        char splitSTR = &#x27;/&#x27;;            //通过“/”分割信息</span><br><span class="line">        private static string[] parts;</span><br><span class="line">        private static int partsLength;</span><br><span class="line">        public ProtocolControls(string ReceiveSTR) </span><br><span class="line">        &#123;</span><br><span class="line">            receiveSTR = ReceiveSTR;</span><br><span class="line">            /////</span><br><span class="line">            //扫描接收信息字节是否有恶意（没写）</span><br><span class="line">            /////</span><br><span class="line">            ProtocolProcessing(receiveSTR);</span><br><span class="line">        &#125;</span><br><span class="line">        private void ProtocolProcessing( string receiveSTR) </span><br><span class="line">        &#123;</span><br><span class="line">            ProtocolTexts protocolTexts = new ProtocolTexts();</span><br><span class="line">            parts = receiveSTR.Split(splitSTR); </span><br><span class="line">            partsLength = parts.Length;</span><br><span class="line">           </span><br><span class="line">            if (parts[0] == protocolTexts.reg)</span><br><span class="line">            &#123;</span><br><span class="line">                switch (parts[0])</span><br><span class="line">                &#123;</span><br><span class="line">                    case &quot;REG&quot;: goto ZCZH; ; ;</span><br><span class="line">                    case &quot;COMM&quot;: goto ZHTX; ; ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        ZCZH:</span><br><span class="line">           </span><br><span class="line">            if (parts[1].Length == 4) </span><br><span class="line">            &#123;</span><br><span class="line">                //SENDMAIL  = parts[3];</span><br><span class="line">                USRRETURN = parts[1];</span><br><span class="line">                captchaSTR = null;////????????????????????????????</span><br><span class="line">                goto PT;</span><br><span class="line">            &#125;</span><br><span class="line">            else </span><br><span class="line">            &#123;</span><br><span class="line">                //USRRETURN = null;</span><br><span class="line">                USRID = parts[1];</span><br><span class="line">                USRKEYWORD = parts[2];</span><br><span class="line">                SENDMAIL = parts[3]; </span><br><span class="line">                Random random = new Random();</span><br><span class="line">                int[] num = new int[4];</span><br><span class="line">                string[] captcha = new string[4];</span><br><span class="line">            </span><br><span class="line">                for (int i = 0; i&lt;4;i++) </span><br><span class="line">                &#123;</span><br><span class="line">                    num[i] = random.Next(0,10); //随机生成数字</span><br><span class="line">                    captcha[i] = num[i].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                captchaSTR = captcha[0]+captcha[1]+captcha[2]+captcha[3];//这是验证码</span><br><span class="line">            goto PT;</span><br><span class="line">                ; </span><br><span class="line">            &#125;</span><br><span class="line">         </span><br><span class="line">        ZHTX:</span><br><span class="line"></span><br><span class="line">            goto PT;</span><br><span class="line">            ;</span><br><span class="line">        PT:// ZCZH 或者 ZHTX 执行完成 后统一 跳转 到 &quot;PT标签&quot;</span><br><span class="line"></span><br><span class="line">          return  ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="步骤二：创建一个“控制台应用（-net-framework）”的新项目CHDAx02"><a href="#步骤二：创建一个“控制台应用（-net-framework）”的新项目CHDAx02" class="headerlink" title="步骤二：创建一个“控制台应用（.net framework）”的新项目CHDAx02"></a>步骤二：创建一个“控制台应用（.net framework）”的新项目CHDAx02</h2><pre><code>项目命名为CHDAx02。该项目只有一个Program.cs文件，唯一需要注意的是socket的使用，它的Beginsend方法及其回调SendCallback与发送方法send。</code></pre><p>由于这个代码是以前写的，不是用来做这个的，只是稍稍改了一下，所以有多余部分没有修改删除，不过重点注意上一句话的内容就行了。</p><h3 id="Program-cs代码如下：-1"><a href="#Program-cs代码如下：-1" class="headerlink" title="Program.cs代码如下："></a>Program.cs代码如下：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Net.Sockets;</span><br><span class="line">using System.Net;</span><br><span class="line"></span><br><span class="line">namespace CHDAx02</span><br><span class="line">&#123;          </span><br><span class="line">    internal class Program //客户端</span><br><span class="line">    &#123;</span><br><span class="line">        //REGISTRATION:REG(注册请求)</span><br><span class="line">        //COMMUNICATION:COMM(通信请求)</span><br><span class="line">      </span><br><span class="line">        public enum Protocol </span><br><span class="line">        &#123;</span><br><span class="line">          REG = 1110,</span><br><span class="line">          COMM = 1111,</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        static IPAddress iPAddress;</span><br><span class="line">        public static int portINT ;</span><br><span class="line">        static IPEndPoint iPEndPoint ;</span><br><span class="line">        </span><br><span class="line">        public static string receiveSTR;</span><br><span class="line">        public static byte[] sendBuffer;</span><br><span class="line">        public static byte[] receiveBuffer;</span><br><span class="line">        static Socket socket ;</span><br><span class="line">      </span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;这里是客户端&quot;);</span><br><span class="line">              try </span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;注意输入用户信息时，格式为 用户id/用户密码/用户邮箱 然后回车，只回车一下，然后等待邮箱接受验证码&quot;);</span><br><span class="line">                Console.WriteLine(&quot;当邮箱接收到验证码后，就可以直接在客户端输入验证码然后回车，若验证码正确，注册完成&quot;);</span><br><span class="line">                Console.WriteLine(&quot;输入服务端IP地址：&quot;);</span><br><span class="line">                iPAddress = IPAddress.Parse(Console.ReadLine());</span><br><span class="line">                Console.WriteLine(&quot;输入服务端端口：&quot;);</span><br><span class="line">                portINT = int.Parse(Console.ReadLine());</span><br><span class="line">                Console.WriteLine(&quot;输入用户信息：&quot;);</span><br><span class="line">                iPEndPoint = new IPEndPoint(iPAddress, portINT);</span><br><span class="line">                socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">                socket.BeginConnect(iPEndPoint, ConnectCallback, socket);</span><br><span class="line">                while (true)</span><br><span class="line">                &#123;</span><br><span class="line">                    string asd = Console.ReadLine();</span><br><span class="line">                    Send(Protocol.REG, asd);</span><br><span class="line">                &#125;</span><br><span class="line">                //*发送信息方法</span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;MainSE:&quot;+se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;MainEX:&quot;+ex.Message); &#125;</span><br><span class="line">            </span><br><span class="line">            Console.WriteLine(&quot;按任意键关闭&quot;);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        private static void ConnectCallback(IAsyncResult ar)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Socket clientSocket = (Socket)ar.AsyncState;</span><br><span class="line">                clientSocket.EndConnect(ar);</span><br><span class="line">                //注释接收</span><br><span class="line">             //clientSocket.BeginReceive(receiveBuffer,0,receiveBuffer.Length,0,ReceiveCallback,clientSocket);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;CCBse:&quot;+se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;CCBex:&quot;+ex.Message); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void ReceiveCallback(IAsyncResult ar)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Socket clientSocket = (Socket)ar.AsyncState;</span><br><span class="line">                int cont = clientSocket.EndReceive(ar);</span><br><span class="line">                receiveSTR = System.Text.Encoding.UTF8.GetString(receiveBuffer, 0, cont);</span><br><span class="line">                Console.WriteLine(receiveSTR);//*</span><br><span class="line">                clientSocket.BeginReceive(receiveBuffer, 0, receiveBuffer.Length, 0, ReceiveCallback, clientSocket);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;RCBse:&quot; + se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;RCBex:&quot;+ex.Message); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static void Send(Protocol protocol,string UserSendSTR) //手动调用//约定协议，协议全部大写</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                string sendData = protocol + &quot;/&quot; + UserSendSTR;</span><br><span class="line">                sendBuffer = System.Text.Encoding.UTF8.GetBytes(sendData);</span><br><span class="line">                socket.BeginSend(sendBuffer, 0, sendBuffer.Length, 0, SendCallback, socket);</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;SendSE:&quot; + se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;SendSE:&quot;+ex.Message); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void SendCallback(IAsyncResult ar)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                Socket socket = (Socket)ar.AsyncState;</span><br><span class="line">                int cont = socket.EndSend(ar);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (SocketException se) &#123; Console.WriteLine(&quot;SCBse:&quot; + se.Message); &#125;</span><br><span class="line">            catch (Exception ex) &#123; Console.WriteLine(&quot;SCBex:&quot;+ex.Message); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="步骤三：如果就只是在本机的端口上使用，那么已经完成。如果想两台电脑远程访问，需要结合路由器的端口映射和cpolar创建隧道，进行进行内网穿透。"><a href="#步骤三：如果就只是在本机的端口上使用，那么已经完成。如果想两台电脑远程访问，需要结合路由器的端口映射和cpolar创建隧道，进行进行内网穿透。" class="headerlink" title="步骤三：如果就只是在本机的端口上使用，那么已经完成。如果想两台电脑远程访问，需要结合路由器的端口映射和cpolar创建隧道，进行进行内网穿透。"></a>步骤三：如果就只是在本机的端口上使用，那么已经完成。如果想两台电脑远程访问，需要结合路由器的端口映射和cpolar创建隧道，进行进行内网穿透。</h2><h3 id="当你完成端口映射和隧道创建后："><a href="#当你完成端口映射和隧道创建后：" class="headerlink" title="当你完成端口映射和隧道创建后："></a>当你完成端口映射和隧道创建后：</h3><pre><code>拥有FWDBx02 项目的作服务端，在输入ip是，应该是你的内网ip，即在cmd中ipconfig看到的ip地址。而CHDAx02项目则是需要发送给客户端，这里输入的ip应该是路由器的公网ip，需要注意端口要统一。原理：当客户端访问 路由器公网ip:端口 时，因为有端口映射，所以路由器会把该端口的访问转发到映射的内网ip上的端口上，就完成了通信。</code></pre><h2 id="代码很粗糙，我知道，这只是我的一个学习记录而已。"><a href="#代码很粗糙，我知道，这只是我的一个学习记录而已。" class="headerlink" title="代码很粗糙，我知道，这只是我的一个学习记录而已。"></a>代码很粗糙，我知道，这只是我的一个学习记录而已。</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由器端口映射与cpolar内网穿透</title>
      <link href="/2024/11/03/%E6%96%B0%E6%96%87%E7%AB%A0/"/>
      <url>/2024/11/03/%E6%96%B0%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h1 id="通过端口映射和隧道技术实现内网穿透"><a href="#通过端口映射和隧道技术实现内网穿透" class="headerlink" title="通过端口映射和隧道技术实现内网穿透"></a>通过端口映射和隧道技术实现内网穿透</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在现代网络环境中，我们经常需要从外部网络访问内网资源。本文将介绍如何通过在路由器中设置端口映射，并使用cpolar创建隧道，来实现从外网访问内网中的私人电脑网站文件。</p><h2 id="步骤一：设置端口映射和创建隧道"><a href="#步骤一：设置端口映射和创建隧道" class="headerlink" title="步骤一：设置端口映射和创建隧道"></a>步骤一：设置端口映射和创建隧道</h2><p>首先，我们需要在路由器中添加一个端口映射。这一步骤将外网的端口映射到内网特定设备的特定端口上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 登录到你的路由器管理界面。</span><br><span class="line">2. 找到“端口映射”或“端口转发”的设置选项。</span><br><span class="line">3. 添加一个新的端口映射规则，指定：</span><br><span class="line">   - 外部端口（你希望从外网访问的端口）</span><br><span class="line">   - 内部IP地址（你的私人电脑的内网IP）</span><br><span class="line">   - 内部端口（你的私人电脑监听的端口，一般情况下与外部端口相同）</span><br></pre></td></tr></table></figure><h2 id="步骤二：使用cpolar创建隧道"><a href="#步骤二：使用cpolar创建隧道" class="headerlink" title="步骤二：使用cpolar创建隧道"></a>步骤二：使用cpolar创建隧道</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 在你的私人电脑上安装并运行cpolar。</span><br><span class="line">2. 按照cpolar的指引，设置隧道，使用以下参数：</span><br><span class="line">   - 公网IP：你的路由器的公网IP地址</span><br><span class="line">   - 公网端口：你之前在路由器中设置的外部端口</span><br><span class="line">3. 启动隧道，cpolar将生成一个网址，用于外网访问。</span><br></pre></td></tr></table></figure><h2 id="步骤三：访问你的私人网站"><a href="#步骤三：访问你的私人网站" class="headerlink" title="步骤三：访问你的私人网站"></a>步骤三：访问你的私人网站</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 在浏览器中输入cpolar提供的网址，你将能够看到你的私人网站上的内容。</span><br><span class="line">- 这里需要注意的问题主要是 你自己的网站是否有SSL/TLS证书；如果没有，就使用http 开头的网址访问（cpolar提供网址）。</span><br></pre></td></tr></table></figure><h2 id="可能出现的问题：Cpolar-Web-UI可能无法登录。"><a href="#可能出现的问题：Cpolar-Web-UI可能无法登录。" class="headerlink" title="可能出现的问题：Cpolar Web UI可能无法登录。"></a>可能出现的问题：Cpolar Web UI可能无法登录。</h2><p> 直接在计算机菜单栏里搜索“服务”，找到“Cpolar Service”。然后打开就行了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/03/hello-world/"/>
      <url>/2024/11/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
